//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/zenmen/easylog_proto/proto/log.proto

package com.zenmen.easylog_proto.proto.gen;

@kotlin.jvm.JvmName("-initializelog")
public inline fun log(block: com.zenmen.easylog_proto.proto.gen.LogKt.Dsl.() -> kotlin.Unit): com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log =
  com.zenmen.easylog_proto.proto.gen.LogKt.Dsl._create(com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log.newBuilder()).apply { block() }._build()
public object LogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log = _builder.build()

    /**
     * <pre>
     * The Unique id of Log, it is nano timestamp generated in client side
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * The Unique id of Log, it is nano timestamp generated in client side
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <pre>
     * Any type of data define in biz layer
     * </pre>
     *
     * <code>.google.protobuf.Any data = 2;</code>
     */
    public var data: com.google.protobuf.Any
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre>
     * Any type of data define in biz layer
     * </pre>
     *
     * <code>.google.protobuf.Any data = 2;</code>
     */
    public fun clearData() {
      _builder.clearData()
    }
    /**
     * <pre>
     * Any type of data define in biz layer
     * </pre>
     *
     * <code>.google.protobuf.Any data = 2;</code>
     * @return Whether the data field is set.
     */
    public fun hasData(): kotlin.Boolean {
      return _builder.hasData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log.copy(block: com.zenmen.easylog_proto.proto.gen.LogKt.Dsl.() -> kotlin.Unit): com.zenmen.easylog_proto.proto.gen.LogOuterClass.Log =
  com.zenmen.easylog_proto.proto.gen.LogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.zenmen.easylog_proto.proto.gen.LogOuterClass.LogOrBuilder.dataOrNull: com.google.protobuf.Any?
  get() = if (hasData()) getData() else null

