// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/taylor/demo/protobuf/ad_log.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.taylor.demo.protobuf.gen;

@kotlin.jvm.JvmName("-initializeevent")
public inline fun event(block: com.taylor.demo.protobuf.gen.EventKt.Dsl.() -> kotlin.Unit): com.taylor.demo.protobuf.gen.AdLog.Event =
  com.taylor.demo.protobuf.gen.EventKt.Dsl._create(com.taylor.demo.protobuf.gen.AdLog.Event.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.taylor.demo.protobuf.gen.Event`
 */
public object EventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.taylor.demo.protobuf.gen.AdLog.Event.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.taylor.demo.protobuf.gen.AdLog.Event.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.taylor.demo.protobuf.gen.AdLog.Event = _builder.build()

    /**
     * `.google.protobuf.Any event = 1;`
     */
    public var event: com.google.protobuf.Any
      @JvmName("getEvent")
      get() = _builder.getEvent()
      @JvmName("setEvent")
      set(value) {
        _builder.setEvent(value)
      }
    /**
     * `.google.protobuf.Any event = 1;`
     */
    public fun clearEvent() {
      _builder.clearEvent()
    }
    /**
     * `.google.protobuf.Any event = 1;`
     * @return Whether the event field is set.
     */
    public fun hasEvent(): kotlin.Boolean {
      return _builder.hasEvent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.taylor.demo.protobuf.gen.AdLog.Event.copy(block: com.taylor.demo.protobuf.gen.EventKt.Dsl.() -> kotlin.Unit): com.taylor.demo.protobuf.gen.AdLog.Event =
  com.taylor.demo.protobuf.gen.EventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.taylor.demo.protobuf.gen.AdLog.EventOrBuilder.eventOrNull: com.google.protobuf.Any?
  get() = if (hasEvent()) getEvent() else null

