//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/taylor/demo/protobuf/ad_log.proto

package com.taylor.demo.protobuf.gen;

@kotlin.jvm.JvmName("-initializeadLog")
public inline fun adLog(block: com.taylor.demo.protobuf.gen.AdLogKt.Dsl.() -> kotlin.Unit): com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog =
  com.taylor.demo.protobuf.gen.AdLogKt.Dsl._create(com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog.newBuilder()).apply { block() }._build()
public object AdLogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>int32 count = 2;</code>
     */
    public var count: kotlin.Int
      @JvmName("getCount")
      get() = _builder.getCount()
      @JvmName("setCount")
      set(value) {
        _builder.setCount(value)
      }
    /**
     * <code>int32 count = 2;</code>
     */
    public fun clearCount() {
      _builder.clearCount()
    }

    /**
     * <code>bool isOpen = 3;</code>
     */
    public var isOpen: kotlin.Boolean
      @JvmName("getIsOpen")
      get() = _builder.getIsOpen()
      @JvmName("setIsOpen")
      set(value) {
        _builder.setIsOpen(value)
      }
    /**
     * <code>bool isOpen = 3;</code>
     */
    public fun clearIsOpen() {
      _builder.clearIsOpen()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog.copy(block: com.taylor.demo.protobuf.gen.AdLogKt.Dsl.() -> kotlin.Unit): com.taylor.demo.protobuf.gen.AdLogOuterClass.AdLog =
  com.taylor.demo.protobuf.gen.AdLogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

