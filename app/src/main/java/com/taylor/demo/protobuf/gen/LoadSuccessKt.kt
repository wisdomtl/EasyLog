// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/taylor/demo/protobuf/ad_log.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.taylor.demo.protobuf.gen;

@kotlin.jvm.JvmName("-initializeloadSuccess")
public inline fun loadSuccess(block: com.taylor.demo.protobuf.gen.LoadSuccessKt.Dsl.() -> kotlin.Unit): com.taylor.demo.protobuf.gen.AdLog.LoadSuccess =
  com.taylor.demo.protobuf.gen.LoadSuccessKt.Dsl._create(com.taylor.demo.protobuf.gen.AdLog.LoadSuccess.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.taylor.demo.protobuf.gen.LoadSuccess`
 */
public object LoadSuccessKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.taylor.demo.protobuf.gen.AdLog.LoadSuccess.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.taylor.demo.protobuf.gen.AdLog.LoadSuccess.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.taylor.demo.protobuf.gen.AdLog.LoadSuccess = _builder.build()

    /**
     * `int32 duration = 1;`
     */
    public var duration: kotlin.Int
      @JvmName("getDuration")
      get() = _builder.getDuration()
      @JvmName("setDuration")
      set(value) {
        _builder.setDuration(value)
      }
    /**
     * `int32 duration = 1;`
     */
    public fun clearDuration() {
      _builder.clearDuration()
    }

    /**
     * `int32 count = 2;`
     */
    public var count: kotlin.Int
      @JvmName("getCount")
      get() = _builder.getCount()
      @JvmName("setCount")
      set(value) {
        _builder.setCount(value)
      }
    /**
     * `int32 count = 2;`
     */
    public fun clearCount() {
      _builder.clearCount()
    }

    /**
     * `bool isHitCache = 3;`
     */
    public var isHitCache: kotlin.Boolean
      @JvmName("getIsHitCache")
      get() = _builder.getIsHitCache()
      @JvmName("setIsHitCache")
      set(value) {
        _builder.setIsHitCache(value)
      }
    /**
     * `bool isHitCache = 3;`
     */
    public fun clearIsHitCache() {
      _builder.clearIsHitCache()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.taylor.demo.protobuf.gen.AdLog.LoadSuccess.copy(block: com.taylor.demo.protobuf.gen.LoadSuccessKt.Dsl.() -> kotlin.Unit): com.taylor.demo.protobuf.gen.AdLog.LoadSuccess =
  com.taylor.demo.protobuf.gen.LoadSuccessKt.Dsl._create(this.toBuilder()).apply { block() }._build()

